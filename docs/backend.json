
{
  "entities": {
    "NewsArticle": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "NewsArticle",
      "type": "object",
      "description": "Represents a news article.",
      "properties": {
        "id": { "type": "string", "description": "Unique identifier for the news article." },
        "title": { "type": "string", "description": "The title of the news article." },
        "content": { "type": "string", "description": "The main content of the news article." },
        "imageUrl": { "type": "string", "description": "URL of the image associated with the news article.", "format": "uri" },
        "categoryIds": { "type": "array", "items": { "type": "string" }, "description": "Array of category IDs." },
        "districtId": { "type": "string", "description": "The district ID to which the news article belongs." },
        "publishedAt": { "type": "string", "description": "Date and time when the news article was published.", "format": "date-time" },
        "status": { "type": "string", "enum": ["published", "draft", "scheduled", "archived"], "description": "Publication status." }
      },
      "required": ["title", "content", "categoryIds", "publishedAt", "status"]
    },
    "Category": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Category",
      "type": "object",
      "description": "Represents a category for news articles.",
      "properties": {
        "id": { "type": "string", "description": "Unique identifier for the category." },
        "name": { "type": "string", "description": "The name of the category (e.g., Politics, Sports)." },
        "slug": { "type": "string", "description": "URL-friendly slug for the category." }
      },
      "required": ["name", "slug"]
    },
    "AdminUser": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "AdminUser",
      "type": "object",
      "description": "Represents an administrator user.",
      "properties": {
        "uid": { "type": "string", "description": "The Firebase UID of the admin user." },
        "role": { "type": "string", "enum": ["admin"], "description": "The role of the user, which must be 'admin'." }
      },
      "required": ["uid", "role"]
    }
  },
  "auth": {
    "providers": ["password", "anonymous"]
  },
  "firestore": {
    "structure": [
      {
        "path": "/news_articles/{newsArticleId}",
        "definition": { "entityName": "NewsArticle", "schema": { "$ref": "#/entities/NewsArticle" } }
      },
      {
        "path": "/categories/{categoryId}",
        "definition": { "entityName": "Category", "schema": { "$ref": "#/entities/Category" } }
      },
      {
        "path": "/roles_admin/{adminUserId}",
        "definition": { "entityName": "AdminUser", "schema": { "$ref": "#/entities/AdminUser" } }
      }
    ],
    "reasoning": "The Firestore structure is designed to support the news portal application. 'news_articles' and 'categories' are top-level collections for content. A dedicated '/roles_admin/{uid}' collection manages admin privileges securely. Each document in '/roles_admin' confirms a user's admin status. This design enables clear and robust security rules, allowing public read access to articles and categories while restricting write access to authenticated admins."
  }
}
