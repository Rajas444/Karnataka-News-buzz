
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an authenticated admin
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Users can only read/update their own profile.
    // User creation is handled during registration.
    match /users/{userId} {
      allow read;
      allow update, delete: if isOwner(userId) || isAdmin();
    }
    
    // Public read access for news articles
    match /articles/{articleId} {
      allow read;
      allow create, update, delete: if isAdmin();
    }

    // Public read access for categories
    match /categories/{categoryId} {
      allow read;
      allow create, update, delete: if isAdmin();
    }

    // Public read access for districts
    match /districts/{districtId} {
        allow read;
        allow create, update, delete: if isAdmin();
    }
    
    // Public read access for jobs
    match /jobs/{jobId} {
        allow read;
        allow create, update, delete: if isAdmin();
    }

    // User-generated posts can be read by anyone.
    // Only authenticated users can create posts.
    // Only the owner or an admin can delete a post.
    match /posts/{postId} {
      allow read;
      allow create: if request.auth != null;
      allow update, delete: if isOwner(resource.data.authorId) || isAdmin();
    }
  }
}
